{"ast":null,"code":"import { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useOnChange(value, callback) {\n  useIsomorphicLayoutEffect(() => {\n    if (isMotionValue(value)) {\n      callback(value.get());\n      return value.onChange(callback);\n    }\n  }, [value, callback]);\n}\n\nfunction useMultiOnChange(values, handler, cleanup) {\n  useIsomorphicLayoutEffect(() => {\n    const subscriptions = values.map(value => value.onChange(handler));\n    return () => {\n      subscriptions.forEach(unsubscribe => unsubscribe());\n      cleanup();\n    };\n  });\n}\n\nexport { useMultiOnChange, useOnChange };","map":{"version":3,"sources":["/Users/daitran/Desktop/portfolio-starter-master/node_modules/framer-motion/dist/es/value/use-on-change.mjs"],"names":["isMotionValue","useIsomorphicLayoutEffect","useOnChange","value","callback","get","onChange","useMultiOnChange","values","handler","cleanup","subscriptions","map","forEach","unsubscribe"],"mappings":"AAAA,SAASA,aAAT,QAA8B,6BAA9B;AACA,SAASC,yBAAT,QAA0C,oCAA1C;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAClCH,EAAAA,yBAAyB,CAAC,MAAM;AAC5B,QAAID,aAAa,CAACG,KAAD,CAAjB,EAA0B;AACtBC,MAAAA,QAAQ,CAACD,KAAK,CAACE,GAAN,EAAD,CAAR;AACA,aAAOF,KAAK,CAACG,QAAN,CAAeF,QAAf,CAAP;AACH;AACJ,GALwB,EAKtB,CAACD,KAAD,EAAQC,QAAR,CALsB,CAAzB;AAMH;;AACD,SAASG,gBAAT,CAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,OAA3C,EAAoD;AAChDT,EAAAA,yBAAyB,CAAC,MAAM;AAC5B,UAAMU,aAAa,GAAGH,MAAM,CAACI,GAAP,CAAYT,KAAD,IAAWA,KAAK,CAACG,QAAN,CAAeG,OAAf,CAAtB,CAAtB;AACA,WAAO,MAAM;AACTE,MAAAA,aAAa,CAACE,OAAd,CAAuBC,WAAD,IAAiBA,WAAW,EAAlD;AACAJ,MAAAA,OAAO;AACV,KAHD;AAIH,GANwB,CAAzB;AAOH;;AAED,SAASH,gBAAT,EAA2BL,WAA3B","sourcesContent":["import { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useOnChange(value, callback) {\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(value)) {\n            callback(value.get());\n            return value.onChange(callback);\n        }\n    }, [value, callback]);\n}\nfunction useMultiOnChange(values, handler, cleanup) {\n    useIsomorphicLayoutEffect(() => {\n        const subscriptions = values.map((value) => value.onChange(handler));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cleanup();\n        };\n    });\n}\n\nexport { useMultiOnChange, useOnChange };\n"]},"metadata":{},"sourceType":"module"}